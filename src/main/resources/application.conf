
database {
  mongo {
    uri = "mongodb://localhost/imazsak"
    uri = ${?DB_URI}
    uriFile = ${?DB_URI_FILE}
  }
}

// core modules: health
modulesEnabled = "health"
modulesEnabled = ${?MODULES_ENABLED}

jwt {
  // Symmetric: HMD5 | HS224 | HS256 | HS384 | HS512
  // Asymmetric: RS256 | RS384 | RS512 | ES256 | ES384 | ES512
  algorithm = "HS256"
  algorithm = ${?JWT_ALGORITHM}
  secret = "secret"
  secret = ${?JWT_SECRET}
  secretFile = ${?JWT_SECRET_FILE}
}

amqp {
  uri = "amqp://guest:guest@127.0.0.1:5672"
  uri = ${?AMQP_URI}
  uriFile = ${?AMQP_URI_FILE}
}

tracer {
  // off, jaeger
  client = "jaeger"
  client = ${?TRACER_CLIENT}
}

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
}

alpakka.s3 {
  aws {
    path-style-access = true
    credentials {
      provider = static
      access-key-id = "minio_admin"
      access-key-id = ${?S3_ACCESS_KEY}
      secret-access-key = "minio_adminpw"
      secret-access-key = ${?S3_ACCESS_SECRET}
    }
    region {
      provider = static
      default-region = ""
      default-region = ${?S3_DEFAULT_REGION}
    }
  }
  endpoint-url = "http://localhost:9999"
  endpoint-url = ${?S3_URL}
}

authHook {
  secret = ${?AUTH_HOOK_SECRET}
  secretFile = ${?AUTH_HOOK_SECRET_FILE}
}

pushNotification {
  publicKey = ""
  publicKey = ${?PUSH_NOTIFICATION_PUBLIC_KEY}
  publicKeyFile = ${?PUSH_NOTIFICATION_PUBLIC_KEY_FILE}
  privateKey = ""
  privateKey = ${?PUSH_NOTIFICATION_PRIVATE_KEY}
  privateKeyFile = ${?PUSH_NOTIFICATION_PRIVATE_KEY_FILE}
}
